create database salary;
use salary;

create table departments 
(
Id int primary key,
DepartmentName varchar(20),
Description text,
CreatedDate datetime ,
UpdatedDate datetime
);

create table roles 
(
Id int primary key,
Name varchar (30),
CreatedDate datetime,
UpdatedDate datetime
);

create table salary_detail_type
(
Id int primary key,
Name varchar(50),
CreatedDate datetime,
UpdatedDate datetime 
);
create table salary_detail
(
Id int primary key,
SalaryId double(12,2),
SalaryDetailTypeId int,
operation tinyint(3),
foreign key (SalaryId) references salary(Id),
foreign key (SalaryDetailTypeId) references salary_detail_type(Id)
);

create table users
(
Id int primary key ,
FirstName varchar(30),
LastName varchar(30),
Email varchar(30),
Phone varchar(20),
EmployeeID varchar(10),
Avatar text,
DepartmentID int,
Gender tinyint(10),
Age int(3),
CreateDate datetime,
UpdateDate datetime 
);

create table salary
(
ID int primary key,
UserRoleId int,
Total_salary double(12,2),
Month varchar(20),
Year varchar(4),
CreateDate datetime,
UpdateDate datetime,
foreign key (UserRoleId) references User_Role(Id)
);

create table User_Department
( 
Id int primary key,
UserId int,
DepartmentId int,
StartDate date ,
EndDate date ,
CreateDate datetime,
UpdateDate datetime,
constraint FK_User foreign key (UserId) references users(Id),
constraint FK_De foreign key (DepartmentId) references departments(Id);
);


alter table User_Depart
-- us ở đây là id của bảng department !!!
add constraint FK_User foreign key (usID) references users(usID),
add constraint FK_De foreign key (deID) references departments(deID);

create table User_Role 
(
urID int primary key,
usID int,
roID int,
start_date date,
end_date date ,
create_at datetime,
update_at datetime,
foreign key (usID) references User_Depart(usID),
foreign key(roID) references  roles(roID)
);

-- Chèn dữ liệu vào bảng salary_detail_type
INSERT INTO salary_detail_type (satpID, satpName, cre, updated)
VALUES
    (1, 'luong chinh', '2023-09-27 08:00:00', '2023-09-27 08:30:00'),
    (2, 'phu cap', '2023-09-27 09:00:00', '2023-09-27 09:30:00'),
    (3, 'luong phu', '2023-09-27 10:00:00', '2023-09-27 10:30:00'),
    (4, 'Type D', '2023-09-27 11:00:00', '2023-09-27 11:30:00'),
    (5, 'Type E', '2023-09-27 12:00:00', '2023-09-27 12:30:00'),
    (6, 'Type F', '2023-09-27 13:00:00', '2023-09-27 13:30:00'),
    (7, 'Type G', '2023-09-27 14:00:00', '2023-09-27 14:30:00'),
    (8, 'Type H', '2023-09-27 15:00:00', '2023-09-27 15:30:00'),
    (9, 'Type I', '2023-09-27 16:00:00', '2023-09-27 16:30:00'),
    (10, 'Type J', '2023-09-27 17:00:00', '2023-09-27 17:30:00');

INSERT INTO salary_detail (sadtID, amount, saID, satpID, operation)
VALUES
    (1, 1000.00, 1, 1, 1),
    (2, 1500.50, 1, 2, 2),
    (3, 800.00, 2, 1, 1),
    (4, 1200.75, 2, 3, 2),
    (5, 950.25, 3, 2, 1),
    (6, 2000.00, 3, 3, 2);

-- lấy ra lương tháng 5 của 1 user bất kì 
select firstName , lastName , total_salary
from users as u join user_depart as ud on u.usID = ud.usID
join user_role as ur on ud.udID = ur.urID
join salary as sa on ur.urID = sa.saID
where sMonth = 5;
-- lấy ra danh sách lương của phòng ban trong tháng 5 
select deName , sum(total_salary) 
from departments as de join user_depart as ud on de.deID = ud.udID
join user_role as ur on ud.udID = ur.urID
join salary as sa on sa.saID = ur.urID
where sMonth = 5
group by (de.deID)
order by sum(total_salary) DESC;

-- lấy ra phòng ban có tổng lương là cao nhất 
select deName , sum(total_salary) as tongluong
from departments as de join user_depart as ud on de.deID = ud.udID
join user_role as ur on ud.udID = ur.urID
join salary as sa on sa.saID = ur.urID
group by (de.deID);